c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 128)     // Update user record with resume path and DB-stored copy
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 145)   // Update user with new resume path (disk)
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 150)   // Also save a DB-stored copy (filename, content-type, binary data)
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 151)   user.resumeFilename = filename;
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 152)   user.resumeContentType = file.type;
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 153)   user.resumeData = buffer;
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 154)     
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 179)         resumePath: savedUser.resumePath,
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 180)         resumeFilename: savedUser.resumeFilename
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 202)     // Prefer serving from DB if available
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 203)     await connectDB();
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 204)     const userWithFile = await User.findOne({ resumeFilename: filename, resumeData: { $ne: null } });
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 205)     if (userWithFile && userWithFile.resumeData) {
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 206)       const fileBuffer = Buffer.from(userWithFile.resumeData);
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 207)       const contentType = userWithFile.resumeContentType || 'application/octet-stream';
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 208)       return new Response(fileBuffer, {
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 209)         headers: {
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 210)           'Content-Type': contentType,
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 211)           'Content-Disposition': `attachment; filename="${userWithFile.resumeOriginalName || filename}"`,
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 212)         },
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 213)       });
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 214)     }
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 215) 
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 216)     // Fallback to disk
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400  40)       hasResume: !!(user.resumePath || user.resumeData),
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400  43)         resumeFilename: user.resumeFilename || null,
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400  46)         // Prefer building URL from resumeFilename if present (served by /api/upload/resume)
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400  47)         resumeUrl: user.resumeFilename ? `/api/upload/resume?file=${user.resumeFilename}` : user.resumeUrl || null
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 102)   // Update user record (clear disk and DB-stored fields)
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 106)   user.resumeFilename = null;
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 107)   user.resumeContentType = null;
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 108)   user.resumeData = null;
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400   5) import ResumeViewer from './ResumeViewer';
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400  73)   const [viewerOpen, setViewerOpen] = useState(false);
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400  74) 
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 122)             <div className="flex gap-3 mt-2">
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 123)               {resumeStatus.resumeInfo.resumeFilename && (
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 124)                 <>
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 125)                   <button
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 126)                     onClick={() => setViewerOpen(true)}
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 127)                     className="px-3 py-1 bg-primary-600 text-white rounded hover:bg-primary-700"
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 128)                   >
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 129)                     View Resume
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 130)                   </button>
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 135)                     className="px-3 py-1 border rounded text-primary-600 hover:bg-gray-50"
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 137)                     Download
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 139)                 </>
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 142)           </div>
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 161)       {viewerOpen && (
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 162)         <ResumeViewer
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 163)           resumeFilename={resumeStatus?.resumeInfo?.resumeFilename}
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 164)           onClose={() => setViewerOpen(false)}
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 165)         />
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 166)       )}
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 167) 
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400  1) "use client";
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400  2) 
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400  3) import { useState, useEffect } from 'react';
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400  4) 
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400  5) export default function ResumeViewer({ resumeFilename, onClose }) {
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400  6)   const [loading, setLoading] = useState(true);
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400  7)   const [error, setError] = useState(null);
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400  8)   const [blobUrl, setBlobUrl] = useState(null);
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400  9) 
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 10)   useEffect(() => {
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 11)     if (!resumeFilename) return;
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 12)     let mounted = true;
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 13)     let objectUrl = null;
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 14) 
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 15)     const fetchPdf = async () => {
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 16)       try {
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 17)         setLoading(true);
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 18)         setError(null);
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 19)         const token = (typeof window !== 'undefined') ? localStorage.getItem('token') : null;
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 20)         const headers = token ? { Authorization: `Bearer ${token}` } : {};
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 21)         const res = await fetch(`/api/upload/resume?file=${encodeURIComponent(resumeFilename)}`, { headers });
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 22)         if (!res.ok) throw new Error(`Failed to fetch resume: ${res.status}`);
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 23)         const arrayBuffer = await res.arrayBuffer();
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 24)         const contentType = res.headers.get('content-type') || 'application/pdf';
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 25)         const blob = new Blob([arrayBuffer], { type: contentType });
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 26)         objectUrl = URL.createObjectURL(blob);
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 27)         if (mounted) setBlobUrl(objectUrl);
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 28)       } catch (err) {
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 29)         if (mounted) setError(err.message || 'Could not load resume');
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 30)       } finally {
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 31)         if (mounted) setLoading(false);
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 32)       }
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 33)     };
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 34) 
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 35)     fetchPdf();
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 36) 
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 37)     return () => {
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 38)       mounted = false;
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 39)       if (objectUrl) {
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 40)         URL.revokeObjectURL(objectUrl);
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 41)       }
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 42)     };
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 43)   }, [resumeFilename]);
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 44) 
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 45)   return (
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 46)     <div className="fixed inset-0 z-50 flex items-center justify-center">
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 47)       <div className="absolute inset-0 bg-black/50" onClick={() => onClose && onClose()} />
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 48)       <div className="relative bg-white rounded-lg shadow-lg w-11/12 md:w-3/4 lg:w-2/3 h-3/4 overflow-hidden">
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 49)         <div className="flex items-center justify-between p-3 border-b">
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 50)           <h3 className="text-lg font-semibold">Resume Preview</h3>
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 51)           <div>
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 52)             <button
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 53)               onClick={() => onClose && onClose()}
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 54)               className="px-3 py-1 bg-gray-100 rounded hover:bg-gray-200"
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 55)             >
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 56)               Close
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 57)             </button>
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 58)           </div>
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 59)         </div>
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 60) 
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 61)         <div className="w-full h-full">
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 62)           {loading && (
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 63)             <div className="w-full h-full flex items-center justify-center">
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 64)               <div>Loading resume...</div>
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 65)             </div>
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 66)           )}
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 67)           {error && (
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 68)             <div className="p-4 text-red-600">Error loading resume: {error}</div>
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 69)           )}
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 70)           {!loading && !error && blobUrl && (
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 71)             <iframe src={blobUrl} title="Resume" className="w-full h-full border-0" />
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 72)           )}
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 73)         </div>
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 74)       </div>
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 75)     </div>
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 76)   );
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400 77) }
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400  39)   // DB-stored copy of the resume (keeps a copy in MongoDB in addition to disk)
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400  40)   resumeFilename: {
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400  41)     type: String,
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400  42)     default: null
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400  43)   },
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400  44)   resumeContentType: {
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400  45)     type: String,
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400  46)     default: null
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400  47)   },
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400  48)   resumeData: {
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400  49)     type: Buffer,
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400  50)     default: null
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400  51)   },
c84fd717 (<anjaneysharma58@gmail.com> 2025-09-30 09:03:46 -0400  52)   
